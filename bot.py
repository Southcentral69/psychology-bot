import os
import logging
import aiohttp
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import CommandStart

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç
def create_prompt(user_input):
    return f"""
–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –¥–µ—Ç—Å–∫–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–µ–±—ë–Ω–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø–∞–ª –≤ —Ç—Ä—É–¥–Ω—É—é –∂–∏–∑–Ω–µ–Ω–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é.
–ì–æ–≤–æ—Ä–∏ –Ω–∞ –ø—Ä–æ—Å—Ç–æ–º, –¥–æ–±—Ä–æ–º –∏ –ø–æ–Ω—è—Ç–Ω–æ–º —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –û—Ç–≤–µ—á–∞–π –º—è–≥–∫–æ, —Å –∑–∞–±–æ—Ç–æ–π –∏ —É–≤–∞–∂–µ–Ω–∏–µ–º.
–ü–æ–º–æ–≥–∞–π –ø–æ–Ω—è—Ç—å —á—É–≤—Å—Ç–≤–∞, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –∏ –Ω–µ –æ—Å—É–∂–¥–∞–π.

–ï—Å–ª–∏ —Ä–µ–±—ë–Ω–æ–∫ –ø–∏—à–µ—Ç –æ –Ω–∞—Å–∏–ª–∏–∏, —Å—Ç—Ä–∞—Ö–µ, —Ç—Ä–µ–≤–æ–≥–µ ‚Äî —É—Å–ø–æ–∫–æ–π –µ–≥–æ, –æ–±—ä—è—Å–Ω–∏, —á—Ç–æ –æ–Ω –Ω–µ –≤–∏–Ω–æ–≤–∞—Ç, –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é –∫ —Ä–æ–¥–∏—Ç–µ–ª—è–º, —É—á–∏—Ç–µ–ª—é, —à–∫–æ–ª—å–Ω–æ–º—É –ø—Å–∏—Ö–æ–ª–æ–≥—É –∏–ª–∏ –≤–∑—Ä–æ—Å–ª–æ–º—É, –∫–æ—Ç–æ—Ä–æ–º—É –æ–Ω –¥–æ–≤–µ—Ä—è–µ—Ç.

–í–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ–±—ë–Ω–∫–∞:
\"\"\"{user_input}\"\"\"
"""

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ OpenRouter API
async def ask_openrouter(message_text: str) -> str:
    prompt = create_prompt(message_text)
    url = "https://openrouter.ai/api/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "https://github.com/Southcentral69/psychology-bot",
        "X-Title": "telegram-psychology-bot"
    }
    payload = {
        "model": "mistralai/mistral-7b-instruct",  # –ú–æ–∂–µ—à—å –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ª—é–±—É—é –¥—Ä—É–≥—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é
        "messages": [{"role": "user", "content": prompt}],
        "temperature": 0.7
    }

    async with aiohttp.ClientSession() as session:
        async with session.post(url, json=payload, headers=headers) as response:
            data = await response.json()
            if "choices" in data:
                return data["choices"][0]["message"]["content"]
            elif "error" in data:
                return f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {data['error'].get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}"
            else:
                return "‚ö†Ô∏è –ü—Ä–æ—Å—Ç–∏, —è –Ω–µ —Å–º–æ–≥ –æ—Ç–≤–µ—Ç–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π —á—É—Ç—å –ø–æ–∑–∂–µ."

# /start
@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –¥–æ–±—Ä—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥-–±–æ—Ç ü§ó\n"
        "–¢—ã –º–æ–∂–µ—à—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –º–Ω–µ, —á—Ç–æ —Ç–µ–±—è —Ç—Ä–µ–≤–æ–∂–∏—Ç, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å."
    )

# –û—Ç–≤–µ—Ç –Ω–∞ –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message()
async def handle_message(message: Message):
    user_text = message.text
    await message.answer("–î—É–º–∞—é... üí≠")
    response = await ask_openrouter(user_text)
    await message.answer(response)

# –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
